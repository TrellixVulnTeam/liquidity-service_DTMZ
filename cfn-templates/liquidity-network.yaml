AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  NLBListenerCertificate:
    Type: String
Resources:
  NLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Subnets: !Ref Subnets
  NLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPCId
      TargetType: ip
      Protocol: TCP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/status"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 0
  NLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NLB
      Protocol: TLS
      Port: 443
      Certificates:
        - CertificateArn: !Ref NLBListenerCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Ref AWS::StackName
      Subscription:
        - Protocol: email
          Endpoint: "admin@liquidityapp.com"
  UnHealthyHostCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: AWS/NetworkELB
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref NLB
        - Name: TargetGroup
          Value: !Ref NLBTargetGroup
      MetricName: UnHealthyHostCount
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      InsufficientDataActions:
        - !Ref SNSTopic
      AlarmActions:
        - !Ref SNSTopic
      OKActions:
        - !Ref SNSTopic
Outputs:
  NLBTargetGroup:
    Value: !Ref NLBTargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-NLBTargetGroup"
  NLBCanonicalHostedZoneID:
    Value: !GetAtt NLB.CanonicalHostedZoneID
    Export:
      Name: !Sub "${AWS::StackName}-NLBCanonicalHostedZoneID"
  NLBDNSName:
    Value: !GetAtt NLB.DNSName
    Export:
      Name: !Sub "${AWS::StackName}-NLBDNSName"
